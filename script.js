// Seleciona os elementos que vamos atualizar
const titleElement = document.getElementById('location-title');
const emojiElement = document.getElementById('weather-emoji');
const tempElement = document.getElementById('weather-temp');
const descElement = document.getElementById('weather-desc');

// Objeto para "traduzir" os c√≥digos do tempo (mesmo de antes)
const weatherCodes = {
    0: { desc: 'C√©u limpo', emoji: '‚òÄÔ∏è' },
    1: { desc: 'Principalmente limpo', emoji: 'üå§Ô∏è' },
    2: { desc: 'Parcialmente nublado', emoji: '‚õÖ' },
    3: { desc: 'Nublado', emoji: '‚òÅÔ∏è' },
    61: { desc: 'Chuva leve', emoji: 'üåßÔ∏è' },
    80: { desc: 'Pancadas de chuva', emoji: 'üåßÔ∏è' },
    95: { desc: 'Trovoada', emoji: '‚õàÔ∏è' },
    // Adicione mais c√≥digos conforme necess√°rio
};

// Fun√ß√£o que busca o clima, agora recebendo lat e lon como par√¢metros
function buscarClima(latitude, longitude) {
    const apiUrl = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&current=temperature_2m,weather_code&timezone=America/Sao_Paulo`;

    fetch(apiUrl)
        .then(response => response.json())
        .then(data => {
            const currentTemp = data.current.temperature_2m;
            const currentCode = data.current.weather_code;
            const weatherInfo = weatherCodes[currentCode] || { desc: 'Tempo desconhecido', emoji: 'ü§∑' };

            // Atualiza o HTML com os dados
            titleElement.textContent = `Clima Agora`; // T√≠tulo gen√©rico
            emojiElement.textContent = weatherInfo.emoji;
            tempElement.textContent = `${Math.round(currentTemp)}¬∞C`;
            descElement.textContent = weatherInfo.desc;
        })
        .catch(error => {
            console.error('Erro ao buscar dados do clima:', error);
            descElement.textContent = 'N√£o foi poss√≠vel carregar o clima.';
        });
}

// Fun√ß√£o para lidar com o sucesso ao obter a localiza√ß√£o
function sucessoNaLocalizacao(posicao) {
    // A API nos devolve um objeto 'posicao' com as coordenadas
    const latitude = posicao.coords.latitude;
    const longitude = posicao.coords.longitude;

    console.log(`Localiza√ß√£o obtida: Lat ${latitude}, Lon ${longitude}`);
    
    // Agora que temos as coordenadas, chamamos a fun√ß√£o para buscar o clima
    buscarClima(latitude, longitude);
}

// Fun√ß√£o para lidar com o erro ao obter a localiza√ß√£o
function erroNaLocalizacao(erro) {
    console.error(`Erro ao obter localiza√ß√£o: ${erro.message}`);
    descElement.textContent = 'N√£o foi poss√≠vel obter sua localiza√ß√£o. Permita o acesso e atualize a p√°gina.';
    emojiElement.textContent = '‚ùå';
}

// A M√ÅGICA ACONTECE AQUI!
// Verificamos se o navegador suporta geolocaliza√ß√£o
if ('geolocation' in navigator) {
    // Se suportar, pedimos a posi√ß√£o do usu√°rio.
    // O navegador vai pedir permiss√£o.
    // Se o usu√°rio aceitar, a fun√ß√£o sucessoNaLocalizacao ser√° chamada.
    // Se ele negar ou der erro, a fun√ß√£o erroNaLocalizacao ser√° chamada.
    navigator.geolocation.getCurrentPosition(sucessoNaLocalizacao, erroNaLocalizacao);
} else {
    // Caso o navegador seja muito antigo e n√£o tenha suporte
    descElement.textContent = 'Seu navegador n√£o suporta geolocaliza√ß√£o.';
}
